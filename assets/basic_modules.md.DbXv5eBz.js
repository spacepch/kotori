import{_ as s,c as i,o as a,V as n}from"./chunks/framework.Dy019jra.js";const g=JSON.parse('{"title":"模块安装","description":"","frontmatter":{},"headers":[],"relativePath":"basic/modules.md","filePath":"basic/modules.md","lastUpdated":1716221148000}'),t={name:"basic/modules.md"},e=n(`<h1 id="模块安装" tabindex="-1">模块安装 <a class="header-anchor" href="#模块安装" aria-label="Permalink to &quot;模块安装&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p><strong>模块（Modules）</strong> 是 Kotori 的重要组成部分之一，通过使用模块以扩展各式各样的功能。</p><p>模块根据功能与应用范围不同，主要分为以下三大类型：</p><ul><li><strong>插件（Plugin）</strong>：为用户提供多种功能、玩法、扩展，数量最多的类型</li><li><strong>服务（Service）</strong>：用于提供封装好的接口</li><li><strong>适配器（Adapter）</strong>：用于接入各个聊天平台</li></ul><h2 id="寻找模块" tabindex="-1">寻找模块 <a class="header-anchor" href="#寻找模块" aria-label="Permalink to &quot;寻找模块&quot;">​</a></h2><p><strong><a href="./../modules/">Kotori 模块中心</a></strong> 内收录了大部分 Kotori 模块。选择所需模块，在详情页中会有插件的基础信息、介绍、使用说明、配置说明等。</p><h2 id="下载与安装" tabindex="-1">下载与安装 <a class="header-anchor" href="#下载与安装" aria-label="Permalink to &quot;下载与安装&quot;">​</a></h2><p>此处以「QQ 适配器服务模块」（<a href="./../modules/#@kotori-bot/kotori-plugin-adapter-qq">@kotori-bot/kotori-plugin-adapter-qq</a>）为例。</p><blockquote><p>模块的包名除去 <code>@xxx/</code> 的部分（如果有），会有一段相似的开始字段，将其称之为「<strong>模块前缀</strong>」。通过模块前缀可判断模块类型，如「kotori-plugin-adapter-xxx」表示<strong>适配器</strong>，「kotori-plugin-database-xxx」表示<strong>数据库服务</strong>，「kotori-plugin-xxx」表示<strong>插件</strong>或<strong>自定义服务</strong>，详细内容请参考 <a href="./../guide/modules/plugin.html">开发文档 - 插件范式</a></p></blockquote><h3 id="使用包管理工具" tabindex="-1">使用包管理工具 <a class="header-anchor" href="#使用包管理工具" aria-label="Permalink to &quot;使用包管理工具&quot;">​</a></h3><p>复制模块详情页里中的安装指令，或手动输入对应模块的 npm 包名，在 Kotori 根目录运行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install @kotori-bot/kotori-plugin-adapter-qq</span></span></code></pre></div><h3 id="手动下载安装" tabindex="-1">手动下载安装 <a class="header-anchor" href="#手动下载安装" aria-label="Permalink to &quot;手动下载安装&quot;">​</a></h3><blockquote><p>该方法仅在必要情况下建议使用</p></blockquote><p>在模块详情页里跳转至对应的 npm 地址或 GitHub 地址，下载模块的构建产物。 解压压缩包并移动至 Kotori 根目录下的 <code>./modules/</code> 内。</p><blockquote><p>GitHub 仓库中存有模块的源码，在当前阶段，你应下载并使用模块的构建产物而非源码</p></blockquote><p>务必确保解压后的模块文件夹仅有一层文件夹而非多层，否则将无法识别与加载模块。</p><h3 id="添加加载目录" tabindex="-1">添加加载目录 <a class="header-anchor" href="#添加加载目录" aria-label="Permalink to &quot;添加加载目录&quot;">​</a></h3><blockquote><p>模块安装在 <code>./modules</code> 目录内请忽略该步骤</p></blockquote><p>通过包管理工具安装的模块一般会安装在 Kotori 根目录下的 <code>./node_modules/</code> 内，如若插件包名带有 <code>@xxx/</code> 的前缀，表示为包的命名空间，上述示例模块中的「@kotori-bot/」为 Kotori 官方包的命名空间，表示<strong>官方模块</strong>，其余的命名空间或无命名空间的模块为<strong>社区模块</strong>。</p><p>所有未安装在 <code>./modules/</code> 都应配置 <code>kotori.yml</code> 的 <code>global.dirs</code> 项以设置额外的加载根目录，但对于 <code>./node_modules/</code> 与 <code>@kotori-bot/</code> 命名空间已经存在于 <code>Kotori.yml</code> 默认配置中，因此无需担心。</p><p>对于其它安装目录或命名空间则需手动添加到 <code>Kotori.yml</code> 中，如：</p><ul><li>使用包管理工具安装一个命名空间为 <code>@custom-scope/</code> 的模块</li><li>将模块安装在 Kotori 根目录下的 <code>./test_modules/</code> 内</li></ul><p>对应配置为：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">global</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  dirs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./node_modules/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./node_modules/@kotori-bot/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 上面为默认配置的加载目录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./node_modules/@custom-scope/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./test_modules</span></span></code></pre></div><h2 id="配置模块" tabindex="-1">配置模块 <a class="header-anchor" href="#配置模块" aria-label="Permalink to &quot;配置模块&quot;">​</a></h2><p>根据安装的模块类型不同，配置策略也将不同。</p><h3 id="插件" tabindex="-1">插件 <a class="header-anchor" href="#插件" aria-label="Permalink to &quot;插件&quot;">​</a></h3><p>插件配置数据应写在 <code>kotori.yml</code> 的 <code>plugin.&lt;plugin-name&gt;</code> 项下，其中 <code>&lt;plugin-name&gt;</code> 为插件名字，不应含有包的命名空间与模块前缀，值必须是一个对象。插件的配置项由插件本身提供与指定，并非所有插件本身都会提供配置项。一般地，有提供配置项的插件内都会有一套默认配置，因此不配置也可以正常运行插件。插件的配置和说明可参考该插件的详情页，此处以 「菜单插件」（<a href="./../modules/#@kotori-bot/kotori-plugin-menu">@kotori-bot/kotori-plugin-menu</a>）为例，在详情页查看配置说明后在 <code>kotori.yml</code> 中配置相关内容：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">plugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  menu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cd</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    keywords</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">菜单</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">功能</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">帮助</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">菜单 | 小鳥%break%/menu - 查看BOT菜单%break%/hitokoto - 获取一条一言%break%ByHotaru</span></span></code></pre></div><h3 id="适配器" tabindex="-1">适配器 <a class="header-anchor" href="#适配器" aria-label="Permalink to &quot;适配器&quot;">​</a></h3><p>适配器配置数据应写在 <code>kotori.yml</code> 的 <code>adapter[instanceName]</code> 项下，其中 <code>instanceName</code> 为适配器实例（以下简称「Bot」）名字应由小写英语字母、数字、连字符（[a-z0-9]）组成，值必须是一个对象。适配器的配置数据不会作用于适配器模块，Kotori 会根据配置数据创建对应 Bot。对于适配器的配置，必须提供一些必要配置项才能确保实例的正常运行，其中有部分配置项由 Kotori 内部定义，如：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">adapter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  cmd-test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    extends</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cmd</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    master</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2333</span></span></code></pre></div><p>「cmd-test」是该 Bot 的名字也是在 kotori 程序运行中的唯一标识符，不可重复。<code>extends</code> 用于指定该实例使用的适配器，值为适配器模块的包名除去命名空间与适配器服务前缀的字符串，如：使用「@kotori-bot/kotori-plugin-adapter-qq」适配器，则应填入「qq」。<code>master</code> 用于指定该实例的最高管理员（Admin），值类型可为数字或字符串，非必填。 除去由 Kotori 内部定义的配置项以外，一般还需要填入该适配器要求传入的必要配置项。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">adapter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  cmd-test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    extends</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cmd</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    master</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2333</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    nickname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Kotarou</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    age</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">18</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    sex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">male</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    self-id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">720</span></span></code></pre></div><blockquote><p>cmd 适配器即「<a href="./../modules/#@kotori-bot/kotori-plugin-adapter-cmd">@kotori-bot/kotori-plugin-adapter-cmd</a>」，属于 kotori 预装模块之一，为 kotori 程序当前所在控制台提供聊天交互功能，也是最方便的测试机器人的场所（但并不推荐，因为只支持文字交互，模块开发有更好的测试场所选择，详细内容请参考 <a href="./../guide/start/setup.html">开发文档 - 项目构建</a>）</p></blockquote><p>不过此处使用的 cmd 适配器定义的配置项均有默认值因此为可选。接着使用「@kotori-bot/kotori-plugin-adapter-qq」适配器再创建一个 Bot：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">adapter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  cmd-test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    extends</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cmd</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    master</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2333</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    nickname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Kotarou</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    age</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">18</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    sex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">male</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    self-id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">720</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  kisaki</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    extends</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">qq</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    appid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxxx&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    secret</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxxxx&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    master</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2333</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    retry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span></code></pre></div><p>查看 QQ 适配器的详情页面可知，<code>appid</code> 、 <code>secret</code> 为其定义的必要配置项，<code>retry</code> 为其定义的可选配置项，关于 QQ 适配器的具体使用与配置项含义请查看其插件详情页。</p><blockquote><p>关于 Kotori.yml 的详细介绍请参考 <a href="./config.html">配置详解</a></p></blockquote>`,41),l=[e];function p(h,k,o,d,r,c){return a(),i("div",null,l)}const y=s(t,[["render",p]]);export{g as __pageData,y as default};
